SportsOracle Architecture (2025)

1. main.py
   - Orchestrates end‑to‑end: scrape → preprocess → embed/cluster → summarize → index

2. run_scrape.py
   - reddit_scraper.py: PRAW to pull subreddits
   - espn_rss_scraper.py: feedparser to pull ESPN RSS
   - Outputs raw JSONL

3. src/preprocess_language.py
   - FastText language detection + MarianMT translation
   - Produces raw_combined_en.jsonl with *_en fields

4. src/embed_cluster.py
   - Loads raw_combined_en.jsonl
   - Splits by category (nba, soccer)
   - SentenceTransformer embeddings (all‑mpnet‑base‑v2)
   - BERTopic clustering (UMAP + HDBSCAN) with custom stopwords
   - Saves embeddings_{cat}.npy, labels_{cat}.npy, clusters_{cat}.json

5. src/summarize_trends.py
   - Reads clusters_{cat}.json + metadata_{cat}.jsonl
   - Picks top posts, runs Pegasus‑XSum (or BART‑CNN) for per‑cluster summaries
   - Emits outputs/trends_summary.json

6. src/faiss_indexer.py
   - Builds FAISS indices for each category from embeddings_{cat}.npy
   - Saves faiss_{cat}.index + index_mapping_{cat}.json

7. app.py (Streamlit)
   - Loads outputs/trends_summary.json
   - Presents interactive dashboard

Everything is driven via config.yaml (embedding model, BERTopic params, UMAP/HDBSCAN settings, summarizer, categories).  

— robdreamville